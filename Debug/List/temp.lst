###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.30.1.20036 [Evaluation] for STM813/Nov/2012  17:29:06 #
# Copyright 2010-2011 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  H:\stm8s903\user\src\temp.c                              #
#    Command line =  H:\stm8s903\user\src\temp.c -e -Ohz --debug              #
#                    --code_model small --data_model medium -o                #
#                    H:\stm8s903\Debug\Obj\ --dlib_config "C:\Program         #
#                    Files\IAR Systems\Embedded Workbench 6.0                 #
#                    Evaluation_3\stm8\LIB\dlstm8smn.h" -lcN                  #
#                    H:\stm8s903\Debug\List\ -I H:\stm8s903/user/\ -I         #
#                    H:\stm8s903/user/src/\ -I H:\stm8s903/user/inc/\ -I      #
#                    H:\stm8s903/addon/\ -I H:\stm8s903/addon/src/\ -I        #
#                    H:\stm8s903/addon/inc/\ -I H:\stm8s903/sys/\ -I          #
#                    H:\stm8s903/sys/inc/\ -I H:\stm8s903/sys/src/\ -I        #
#                    H:\stm8s903/lib/\ -I H:\stm8s903/lib/src/\ -I            #
#                    H:\stm8s903/lib/inc/\ --vregs 16                         #
#    List file    =  H:\stm8s903\Debug\List\temp.lst                          #
#    Object file  =  H:\stm8s903\Debug\Obj\temp.o                             #
#                                                                             #
#                                                                             #
###############################################################################

H:\stm8s903\user\src\temp.c
      1          /*
      2          *****************************************************************************
      3          *					PACE ELECTRONICS CO.,LTD
      4          *	Copyright 2011, PACE ELECTRONICS CO.,LTD  Shenzhen, China
      5          *					All rights reserved.
      6          *
      7          * Filename:			temp.c
      8          * Description:			temp c file
      9          *
     10          *
     11          * Change History:
     12          *			Goldjun	- 10/30'2012 - Ver 0.1
     13          *					- created
     14          *			xxxxx	- xx/xx/20xx - Ver xx
     15          *					- change code
     16          ******************************************************************************
     17          */
     18          #include "adc.h"
     19          #include "temp.h"
     20          
     21          
     22          
     23          #define ADC_TEMP_CHANEL			2
     24          
     25          
     26          	TEMP_CTRL		gTemp;
     27          
     28          
     29          
     30          
     31          
     32          //(B25/50 3950 47k pull up)
     33          const   WORD 	TempADTable[ ] =
     34          	{
     35          943, 		//-10
     36          939, 		//-9
     37          935, 		//-8
     38          930, 		//-7
     39          926, 		//-6
     40          921, 		//-5
     41          915, 		//-4
     42          910,		//-3 
     43          905, 		//-2
     44          899, 		//-1
     45          894, 		//0
     46          888, 		//1
     47          882, 		//2
     48          877, 		//3
     49          870, 		//4
     50          864,		//5 
     51          858, 		//6
     52          851, 		//7
     53          844, 		//8
     54          837,		//9 
     55          829, 		//10
     56          821, 		//11
     57          814, 		//12
     58          806, 		//13
     59          798, 		//14
     60          790, 		//15
     61          782, 		//16
     62          773, 		//17
     63          764, 		//18
     64          755, 		//19
     65          746, 		//20
     66          736, 		//21
     67          726, 		//22
     68          716,		//23 
     69          706, 		//24
     70          696, 		//25
     71          686, 		//26
     72          676, 		//27
     73          667, 		//28
     74          658, 		//29
     75          650, 		//30
     76          641, 		//31
     77          631, 		//32
     78          621, 		//33
     79          610, 		//34
     80          599, 		//35
     81          588, 		//36
     82          577, 		//37
     83          566, 		//38
     84          555, 		//39
     85          543, 		//40
     86          200, 
     87          0 
     88          	};
     89          
     90          
     91          //Get Adc Key Index
     92          extern BYTE
     93          	GetTempIndex(
     94                               void
     95          		)
     96          {
     97          	WORD	adcbuf;
     98          	BYTE	i;
     99          //read temp adc volt
    100          	{
    101          	adcbuf = GetOneChanelAdcValue(ADC_TEMP_CHANEL);
    102          	}	
    103          //crc tempindex data        
    104          	for(i=0;(i<51);i++)
    105          		{
    106          		if(adcbuf > TempADTable[i])
    107          			{
    108          			break;
    109          			}
    110          		}		
    111          //	DBG(("TempIndex:%d\n", i));	
    112          	return(i);
    113          }
    114          
    115          
    116          
    117          void
    118          	TempInit(
    119          		void
    120          		)
    121          {
    122              gTemp.Temperature = GetTempIndex();
    123              gTemp.Timer = 0;
    124              gTemp.ScanTimer = 0;	
    125              gTemp.State = TEMP_STATE_IDLE;
    126          
    127          }
    128          
    129          
    130          
    131          
    132          void
    133          	TempCtrl(
    134          		void
    135          		)
    136          {
    137          //get temp	
    138          	if(gTemp.ScanTimer == 0)
    139          {
    140          	gTemp.ScanTimer = 500;
    141          	gTemp.Temperature = GetTempIndex();
    142          
    143          //judge temp1 ok ?
    144          	if((gTemp.Temperature >= (gTemp.SetTemperature + 2)))
    145          		{
    146          		gTemp.TempOkFlag = 1;
    147          		}
    148          	else if((gTemp.SetTemperature) >= (gTemp.Temperature + 1))
    149          		{
    150          		gTemp.TempOkFlag = 0;
    151          		}
    152          }
    153          
    154          }

   Section sizes:

     Function/Label Bytes
     -------------- -----
     gTemp             9
     TempADTable     106
     GetTempIndex     34
     TempInit         18
     TempCtrl         68

 
   9 bytes in section .near.bss
 106 bytes in section .near.rodata
 120 bytes in section .near_func.text
 
 120 bytes of CODE  memory
 106 bytes of CONST memory
   9 bytes of DATA  memory

Errors: none
Warnings: none
