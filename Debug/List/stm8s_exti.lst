###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.31.1.20058 [Evaluation] for STM829/Feb/2016  15:32:53 #
# Copyright 2010-2012 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  D:\ProjectPath\STMPath\AC100_a0\sys\src\stm8s_exti.c     #
#    Command line =  D:\ProjectPath\STMPath\AC100_a0\sys\src\stm8s_exti.c -e  #
#                    -Om --no_unroll --no_inline --no_tbaa --no_cross_call    #
#                    --debug --code_model small --data_model medium -o        #
#                    D:\ProjectPath\STMPath\AC100_a0\Debug\Obj\               #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 6.0 Evaluation\stm8\LIB\dlstm8smn.h" -lcN      #
#                    D:\ProjectPath\STMPath\AC100_a0\Debug\List\ -I           #
#                    D:\ProjectPath\STMPath\AC100_a0/user/\ -I                #
#                    D:\ProjectPath\STMPath\AC100_a0/user/src/\ -I            #
#                    D:\ProjectPath\STMPath\AC100_a0/user/inc/\ -I            #
#                    D:\ProjectPath\STMPath\AC100_a0/addon/\ -I               #
#                    D:\ProjectPath\STMPath\AC100_a0/addon/src/\ -I           #
#                    D:\ProjectPath\STMPath\AC100_a0/addon/inc/\ -I           #
#                    D:\ProjectPath\STMPath\AC100_a0/sys/\ -I                 #
#                    D:\ProjectPath\STMPath\AC100_a0/sys/inc/\ -I             #
#                    D:\ProjectPath\STMPath\AC100_a0/sys/src/\ -I             #
#                    D:\ProjectPath\STMPath\AC100_a0/lib/\ -I                 #
#                    D:\ProjectPath\STMPath\AC100_a0/lib/src/\ -I             #
#                    D:\ProjectPath\STMPath\AC100_a0/lib/inc/\ --vregs 16     #
#    List file    =  D:\ProjectPath\STMPath\AC100_a0\Debug\List\stm8s_exti.ls #
#                    t                                                        #
#    Object file  =  D:\ProjectPath\STMPath\AC100_a0\Debug\Obj\stm8s_exti.o   #
#                                                                             #
#                                                                             #
###############################################################################

D:\ProjectPath\STMPath\AC100_a0\sys\src\stm8s_exti.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm8s_exti.c
      4            * @author  MCD Application Team
      5            * @version V2.0.0
      6            * @date    25-February-2011
      7            * @brief   This file contains all the functions for the EXTI peripheral.
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     17            *
     18            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     19            ******************************************************************************
     20            */
     21          
     22          /* Includes ------------------------------------------------------------------*/
     23          #include "stm8s_exti.h"
     24          
     25          /** @addtogroup STM8S_StdPeriph_Driver
     26            * @{
     27            */
     28          /* Private typedef -----------------------------------------------------------*/
     29          /* Private define ------------------------------------------------------------*/
     30          /* Private macro -------------------------------------------------------------*/
     31          /* Private variables ---------------------------------------------------------*/
     32          /* Private function prototypes -----------------------------------------------*/
     33          /* Private functions ---------------------------------------------------------*/
     34          
     35          /* Public functions ----------------------------------------------------------*/
     36          
     37          /**
     38            * @addtogroup EXTI_Public_Functions
     39            * @{
     40            */
     41          
     42          /**
     43            * @brief  Deinitializes the external interrupt control registers to their default reset value.
     44            * @param  None
     45            * @retval None
     46            */
     47          void EXTI_DeInit(void)
     48          {
     49              EXTI->CR1 = EXTI_CR1_RESET_VALUE;
     50              EXTI->CR2 = EXTI_CR2_RESET_VALUE;
     51          }
     52          
     53          /**
     54            * @brief  Set the external interrupt sensitivity of the selected port.
     55            * @warning
     56            * - The modification of external interrupt sensitivity is only possible when the interrupts are disabled.
     57            * - The normal behavior is to disable the interrupts before calling this function, and re-enable them after.
     58            * @param   Port The port number to access.
     59            * @param   SensitivityValue The external interrupt sensitivity value to set.
     60            * @retval None
     61            * @par Required preconditions:
     62            * Global interrupts must be disabled before calling this function.
     63            */
     64          void EXTI_SetExtIntSensitivity(EXTI_Port_TypeDef Port, EXTI_Sensitivity_TypeDef SensitivityValue)
     65          {
     66          
     67              /* Check function parameters */
     68              assert_param(IS_EXTI_PORT_OK(Port));
     69              assert_param(IS_EXTI_SENSITIVITY_OK(SensitivityValue));
     70          
     71              /* Set external interrupt sensitivity */
     72              switch (Port)
     73              {
     74              case EXTI_PORT_GPIOA:
     75                  EXTI->CR1 &= (uint8_t)(~EXTI_CR1_PAIS);
     76                  EXTI->CR1 |= (uint8_t)(SensitivityValue);
     77                  break;
     78              case EXTI_PORT_GPIOB:
     79                  EXTI->CR1 &= (uint8_t)(~EXTI_CR1_PBIS);
     80                  EXTI->CR1 |= (uint8_t)((uint8_t)(SensitivityValue) << 2);
     81                  break;
     82              case EXTI_PORT_GPIOC:
     83                  EXTI->CR1 &= (uint8_t)(~EXTI_CR1_PCIS);
     84                  EXTI->CR1 |= (uint8_t)((uint8_t)(SensitivityValue) << 4);
     85                  break;
     86              case EXTI_PORT_GPIOD:
     87                  EXTI->CR1 &= (uint8_t)(~EXTI_CR1_PDIS);
     88                  EXTI->CR1 |= (uint8_t)((uint8_t)(SensitivityValue) << 6);
     89                  break;
     90              case EXTI_PORT_GPIOE:
     91                  EXTI->CR2 &= (uint8_t)(~EXTI_CR2_PEIS);
     92                  EXTI->CR2 |= (uint8_t)(SensitivityValue);
     93                  break;
     94              default:
     95                  break;
     96              }
     97          }
     98          
     99          /**
    100            * @brief  Set the TLI interrupt sensitivity.
    101            * @param   SensitivityValue The TLI interrupt sensitivity value.
    102            * @retval None
    103            * @par Required preconditions:
    104            * Global interrupts must be disabled before calling this function.
    105            */
    106          void EXTI_SetTLISensitivity(EXTI_TLISensitivity_TypeDef SensitivityValue)
    107          {
    108              /* Check function parameters */
    109              assert_param(IS_EXTI_TLISENSITIVITY_OK(SensitivityValue));
    110          
    111              /* Set TLI interrupt sensitivity */
    112              EXTI->CR2 &= (uint8_t)(~EXTI_CR2_TLIS);
    113              EXTI->CR2 |= (uint8_t)(SensitivityValue);
    114          }
    115          
    116          /**
    117            * @brief  Get the external interrupt sensitivity of the selected port.
    118            * @param   Port The port number to access.
    119            * @retval EXTI_Sensitivity_TypeDef The external interrupt sensitivity of the selected port.
    120            */
    121          EXTI_Sensitivity_TypeDef EXTI_GetExtIntSensitivity(EXTI_Port_TypeDef Port)
    122          {
    123              uint8_t value = 0;
    124          
    125              /* Check function parameters */
    126              assert_param(IS_EXTI_PORT_OK(Port));
    127          
    128              switch (Port)
    129              {
    130              case EXTI_PORT_GPIOA:
    131                  value = (uint8_t)(EXTI->CR1 & EXTI_CR1_PAIS);
    132                  break;
    133              case EXTI_PORT_GPIOB:
    134                  value = (uint8_t)((uint8_t)(EXTI->CR1 & EXTI_CR1_PBIS) >> 2);
    135                  break;
    136              case EXTI_PORT_GPIOC:
    137                  value = (uint8_t)((uint8_t)(EXTI->CR1 & EXTI_CR1_PCIS) >> 4);
    138                  break;
    139              case EXTI_PORT_GPIOD:
    140                  value = (uint8_t)((uint8_t)(EXTI->CR1 & EXTI_CR1_PDIS) >> 6);
    141                  break;
    142              case EXTI_PORT_GPIOE:
    143                  value = (uint8_t)(EXTI->CR2 & EXTI_CR2_PEIS);
    144                  break;
    145              default:
    146                  break;
    147              }
    148          
    149              return((EXTI_Sensitivity_TypeDef)value);
    150          }
    151          
    152          /**
    153            * @brief  Get the TLI interrupt sensitivity.
    154            * @param  None
    155            * @retval EXTI_TLISensitivity_TypeDef The TLI interrupt sensitivity read.
    156            */
    157          EXTI_TLISensitivity_TypeDef EXTI_GetTLISensitivity(void)
    158          {
    159          
    160              uint8_t value = 0;
    161          
    162              /* Get TLI interrupt sensitivity */
    163              value = (uint8_t)(EXTI->CR2 & EXTI_CR2_TLIS);
    164          
    165              return((EXTI_TLISensitivity_TypeDef)value);
    166          }
    167          
    168          /**
    169            * @}
    170            */
    171            
    172          /**
    173            * @}
    174            */
    175            
    176          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Section sizes:

     Function/Label            Bytes
     --------------            -----
     EXTI_DeInit                  9
     EXTI_SetExtIntSensitivity  109
     EXTI_SetTLISensitivity      11
     EXTI_GetExtIntSensitivity   71
     EXTI_GetTLISensitivity       6

 
 206 bytes in section .near_func.text
 
 206 bytes of CODE memory

Errors: none
Warnings: none
