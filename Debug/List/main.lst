###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.31.1.20058 [Evaluation] for STM814/Apr/2016  17:00:33 #
# Copyright 2010-2012 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  D:\ProjectPath\STMPath\kkk\sys\src\main.c                #
#    Command line =  D:\ProjectPath\STMPath\kkk\sys\src\main.c -e -Om         #
#                    --no_unroll --no_inline --no_tbaa --no_cross_call        #
#                    --debug --code_model small --data_model medium -o        #
#                    D:\ProjectPath\STMPath\kkk\Debug\Obj\ --dlib_config      #
#                    "C:\Program Files\IAR Systems\Embedded Workbench 6.0     #
#                    Evaluation\stm8\LIB\dlstm8smn.h" -lcN                    #
#                    D:\ProjectPath\STMPath\kkk\Debug\List\ -I                #
#                    D:\ProjectPath\STMPath\kkk/user/\ -I                     #
#                    D:\ProjectPath\STMPath\kkk/user/src/\ -I                 #
#                    D:\ProjectPath\STMPath\kkk/user/inc/\ -I                 #
#                    D:\ProjectPath\STMPath\kkk/addon/\ -I                    #
#                    D:\ProjectPath\STMPath\kkk/addon/src/\ -I                #
#                    D:\ProjectPath\STMPath\kkk/addon/inc/\ -I                #
#                    D:\ProjectPath\STMPath\kkk/sys/\ -I                      #
#                    D:\ProjectPath\STMPath\kkk/sys/inc/\ -I                  #
#                    D:\ProjectPath\STMPath\kkk/sys/src/\ -I                  #
#                    D:\ProjectPath\STMPath\kkk/lib/\ -I                      #
#                    D:\ProjectPath\STMPath\kkk/lib/src/\ -I                  #
#                    D:\ProjectPath\STMPath\kkk/lib/inc/\ --vregs 16          #
#    List file    =  D:\ProjectPath\STMPath\kkk\Debug\List\main.lst           #
#    Object file  =  D:\ProjectPath\STMPath\kkk\Debug\Obj\main.o              #
#                                                                             #
#                                                                             #
###############################################################################

D:\ProjectPath\STMPath\kkk\sys\src\main.c
      1          
      2          #include "stm8s.h"  
      3          #include "user.h"  
      4          int main( void )
      5          { 
      6            uint16_t j,i = 0;
      7            disableInterrupts();
      8            SysInit();
      9            PortInit();
     10            ADC_Init();
     11            Timer2Init();       // 10ms
     12            PWM2_Init();
     13            enableInterrupts();
     14            VREF_ON();  
     15            VarClear();
     16            Pre_Dis_ON();
     17            MCU_CO_OFF();
     18            MCU_DO_OFF();
     19            WorkMode = IDLE_MODE; 
     20            LED1_OFF();
     21            LED2_OFF(); 
     22            LED_3ON_4OFF() ; 
     23            //DisCur_Bias_Val = ADConverse(5);     //µç³Ø°üµçÑ¹¼ì²â  if(Current_float_Tmp_Last_Len <32) 
     24            //=== ADDR_BASE ==0x004000    ADDR_END ==0x00407F
     25            //void FLASH_ProgramByte(uint32_t Address, uint8_t Data);
     26            //uint8_t FLASH_ReadByte(uint32_t Address);
     27            //void FLASH_ProgramWord(uint32_t Address, uint32_t Data); 
     28            
     29            FLASH_Unlock(FLASH_MEMTYPE_DATA);
     30            for(i =0;i<64;i++)
     31            {
     32              FLASH_ProgramByte( i, 0x55);
     33            }
     34            Write_word( 4,0x76543210); 
     35            FLASH_Lock(FLASH_MEMTYPE_DATA);
     36            while(1)
     37            {
     38              ClrWdt(); 
     39              j += 1;
     40              for(i =0;i<3000;i++)
     41              {
     42                ClrWdt();
     43                nop();nop();nop();nop();
     44              }  
     45              if(0xAA == FLASH_ReadByte(ADDR_BASE))
     46              {
     47                LED1_OFF();
     48              }
     49              else
     50              {
     51                LED1_ON();
     52              }
     53              for(i =0;i<3000;i++)
     54              {
     55                ClrWdt();
     56                nop();nop();nop();nop();
     57              } 
     58              //FLASH_Unlock(FLASH_MEMTYPE_DATA);
     59              //FLASH_ProgramByte(ADDR_BASE, 0x00);
     60              //FLASH_Lock(FLASH_MEMTYPE_DATA); 
     61            }
     62            while(1)
     63            {
     64              ClrWdt();
     65              //LED1_XOR();  
     66              ModeCheck();   
     67                  //WorkMode = DISCHARGE_MODE;    
     68              StatusClear();
     69              CurrentCheck();    
     70              TempCheck(); 
     71              BatVolCheck();
     72              FET_ChgDis_Cntrl(); 
     73              WorkLedShow();//LedShow();  //
     74            }
     75            while(1)
     76            {
     77              nop();
     78              nop();
     79              nop();
     80              if(LedShow_Flash_t < 100)
     81              {
     82                LED1_ON(); 
     83                LED2_OFF(); 
     84                LED_3OFF_4OFF(); 
     85              }
     86              else if(LedShow_Flash_t < 200)
     87              {
     88                LED1_OFF(); 
     89                LED2_ON(); 
     90                LED_3OFF_4OFF(); 
     91              }
     92              else if(LedShow_Flash_t < 300)
     93              {
     94                LED1_OFF(); 
     95                LED2_OFF(); 
     96                LED_3ON_4OFF(); 
     97              }
     98              else if(LedShow_Flash_t < 400)
     99              {
    100                LED1_OFF(); 
    101                LED2_OFF(); 
    102                LED_3OFF_4ON(); 
    103              }
    104              else if(LedShow_Flash_t < 500)
    105              { 
    106                LED2_OFF(); 
    107                LED1_OFF(); 
    108                LED_3OFF_4OFF();
    109              } 
    110              else
    111              {
    112                LedShow_Flash_t = 0; 
    113              } 
    114                
    115              
    116            } 
    117            return 0;
    118          }

   Section sizes:

     Function/Label Bytes
     -------------- -----
     _A_PA_ODR         1
     _A_PB_ODR         1
     _A_PC_ODR         1
     _A_PD_ODR         1
     main            199

 
   4 bytes in section .near.noinit
 199 bytes in section .near_func.text
 
 199 bytes of CODE memory
   0 bytes of DATA memory (+ 4 bytes shared)

Errors: none
Warnings: 3
